plugins {
    id 'java-library'
}

defaultTasks 'build'

def combineJars = tasks.register("combineJars", org.gradle.jvm.tasks.Jar) {
    mustRunAfter build

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from(files(subprojects.findAll { it.name != 'webmap' }.collect {
        it.layout.buildDirectory.file("libs/${rootProject.name}-${it.name}-${it.version}.jar").get()
    }).filter { it.name != 'MANIFEST.MF' }.collect { if (it.isDirectory()) it else zipTree(it) })

    doLast {
        File dir = new File(rootDir, "jars")

        if (dir.exists()) dir.delete()

        dir.mkdirs()

        copy {
            from(layout.buildDirectory.file("libs/${rootProject.name}-${rootProject.version}.jar"))
            into(dir)
        }
    }
}

assemble {
    subprojects.forEach { project -> dependsOn ":${project.name}:build" }

    finalizedBy combineJars
}

subprojects {
    apply plugin: 'java-library'

    repositories {
        maven { url = 'https://repo.crazycrew.us/releases' }

        maven { url = 'https://jitpack.io' }

        mavenCentral()
    }

    if (name == "paper") {
        repositories {
            maven { url = 'https://repo.codemc.io/repository/maven-public/' }

            maven { url = 'https://repo.triumphteam.dev/snapshots' }
        }
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.release.set(17)
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    processResources {
        filteringCharset = 'UTF-8'
    }
}